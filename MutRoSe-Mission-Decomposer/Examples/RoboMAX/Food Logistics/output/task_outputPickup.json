{
    "actions": [
        {
            "name": "approach-door",
            "capabilities": ""
        },
        {
            "name": "approach-human",
            "capabilities": ""
        },
        {
            "name": "load-dishes",
            "capabilities": ""
        },
        {
            "name": "navto",
            "capabilities": ""
        },
        {
            "name": "open-door",
            "capabilities": "door-opening"
        },
        {
            "name": "pick-patient-dishes",
            "capabilities": ""
        },
        {
            "name": "retrieve-dishes",
            "capabilities": ""
        },
        {
            "name": "wait-for-door-opening",
            "capabilities": ""
        },
        {
            "name": "wait-for-human-to-place-dish",
            "capabilities": ""
        }
    ],
    "tasks": {
        "t0": {
            "id": "AT1_1|1",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomA",
                "?p": "Patient1"
            },
            "locations": "RoomA",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a2": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a3": {
                    "name": "approach-door",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "open-door",
                    "arguments": "?r1 ?r2 ?l"
                },
                "a5": {
                    "name": "approach-human",
                    "arguments": "?r1 ?l ?p"
                },
                "a6": {
                    "name": "wait-for-human-to-place-dish",
                    "arguments": "?r1 ?p"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t1": {
            "id": "AT1_1|2",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomA",
                "?p": "Patient1"
            },
            "locations": "RoomA",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "not ?r2.picked_dishes",
                    "vars": "?r2",
                    "var_types": "robot"
                },
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a2": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a3": {
                    "name": "approach-door",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "open-door",
                    "arguments": "?r1 ?r2 ?l"
                },
                "a5": {
                    "name": "pick-patient-dishes",
                    "arguments": "?r2 ?p"
                },
                "a6": {
                    "name": "load-dishes",
                    "arguments": "?r2 ?r1"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t2": {
            "id": "AT1_1|3",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomA",
                "?p": "Patient1"
            },
            "locations": "RoomA",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "Patient1.can_open",
                    "vars": "Patient1",
                    "var_types": "patient"
                },
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a2": {
                    "name": "wait-for-door-opening",
                    "arguments": "?r1"
                },
                "a3": {
                    "name": "approach-human",
                    "arguments": "?r1 ?l ?p"
                },
                "a4": {
                    "name": "wait-for-human-to-place-dish",
                    "arguments": "?r1 ?p"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t3": {
            "id": "AT1_1|4",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomA",
                "?p": "Patient1"
            },
            "locations": "RoomA",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "Patient1.can_open",
                    "vars": "Patient1",
                    "var_types": "patient"
                },
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "not ?r2.picked_dishes",
                    "vars": "?r2",
                    "var_types": "robot"
                },
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a2": {
                    "name": "wait-for-door-opening",
                    "arguments": "?r1"
                },
                "a3": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "pick-patient-dishes",
                    "arguments": "?r2 ?p"
                },
                "a5": {
                    "name": "load-dishes",
                    "arguments": "?r2 ?r1"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t4": {
            "id": "AT2_1|1",
            "name": "RetrieveDishes",
            "arguments": {
                "?r": "robot",
                "?l": "location"
            },
            "arguments_values": {
                "?r": "",
                "?l": "Kitchen"
            },
            "locations": "Kitchen",
            "robots_num": {
                "fixed": "True",
                "num": "1"
            },
            "preconditions": "",
            "effects": "",
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r ?l"
                },
                "a1": {
                    "name": "retrieve-dishes",
                    "arguments": "?r ?l"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t5": {
            "id": "AT1_2|1",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomC",
                "?p": "Patient3"
            },
            "locations": "RoomC",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a2": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a3": {
                    "name": "approach-door",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "open-door",
                    "arguments": "?r1 ?r2 ?l"
                },
                "a5": {
                    "name": "approach-human",
                    "arguments": "?r1 ?l ?p"
                },
                "a6": {
                    "name": "wait-for-human-to-place-dish",
                    "arguments": "?r1 ?p"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t6": {
            "id": "AT1_2|2",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomC",
                "?p": "Patient3"
            },
            "locations": "RoomC",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "not ?r2.picked_dishes",
                    "vars": "?r2",
                    "var_types": "robot"
                },
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a2": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a3": {
                    "name": "approach-door",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "open-door",
                    "arguments": "?r1 ?r2 ?l"
                },
                "a5": {
                    "name": "pick-patient-dishes",
                    "arguments": "?r2 ?p"
                },
                "a6": {
                    "name": "load-dishes",
                    "arguments": "?r2 ?r1"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t7": {
            "id": "AT1_2|3",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomC",
                "?p": "Patient3"
            },
            "locations": "RoomC",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "Patient3.can_open",
                    "vars": "Patient3",
                    "var_types": "patient"
                },
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a2": {
                    "name": "wait-for-door-opening",
                    "arguments": "?r1"
                },
                "a3": {
                    "name": "approach-human",
                    "arguments": "?r1 ?l ?p"
                },
                "a4": {
                    "name": "wait-for-human-to-place-dish",
                    "arguments": "?r1 ?p"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t8": {
            "id": "AT1_2|4",
            "name": "PickupDishes",
            "arguments": {
                "?r1": "robot",
                "?r2": "robot",
                "?l": "location",
                "?p": "patient"
            },
            "arguments_values": {
                "?r1": "",
                "?r2": "",
                "?l": "RoomC",
                "?p": "Patient3"
            },
            "locations": "RoomC",
            "robots_num": {
                "fixed": "False",
                "min": "1",
                "max": "2"
            },
            "preconditions": [
                {
                    "predicate": "Patient3.can_open",
                    "vars": "Patient3",
                    "var_types": "patient"
                },
                {
                    "predicate": "not ?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "effects": [
                {
                    "predicate": "not ?r2.picked_dishes",
                    "vars": "?r2",
                    "var_types": "robot"
                },
                {
                    "predicate": "?r1.picked_dishes",
                    "vars": "?r1",
                    "var_types": "robot"
                }
            ],
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r1 ?l"
                },
                "a1": {
                    "name": "approach-door",
                    "arguments": "?r1 ?l"
                },
                "a2": {
                    "name": "wait-for-door-opening",
                    "arguments": "?r1"
                },
                "a3": {
                    "name": "navto",
                    "arguments": "?r2 ?l"
                },
                "a4": {
                    "name": "pick-patient-dishes",
                    "arguments": "?r2 ?p"
                },
                "a5": {
                    "name": "load-dishes",
                    "arguments": "?r2 ?r1"
                }
            },
            "group": "True",
            "divisible": "True"
        },
        "t9": {
            "id": "AT2_2|1",
            "name": "RetrieveDishes",
            "arguments": {
                "?r": "robot",
                "?l": "location"
            },
            "arguments_values": {
                "?r": "",
                "?l": "Kitchen"
            },
            "locations": "Kitchen",
            "robots_num": {
                "fixed": "True",
                "num": "1"
            },
            "preconditions": "",
            "effects": "",
            "triggering_events": "",
            "decomposition": {
                "a0": {
                    "name": "navto",
                    "arguments": "?r ?l"
                },
                "a1": {
                    "name": "retrieve-dishes",
                    "arguments": "?r ?l"
                }
            },
            "group": "True",
            "divisible": "True"
        }
    },
    "constraints": [
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t0",
                "t1": "t4"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t1",
                "t1": "t4"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t2",
                "t1": "t4"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t3",
                "t1": "t4"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t5",
                "t1": "t9"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t6",
                "t1": "t9"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t7",
                "t1": "t9"
            }
        },
        {
            "type": "SEQ",
            "task_instances": {
                "t0": "t8",
                "t1": "t9"
            }
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t0",
                "t1": "t4"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t1",
                "t1": "t4"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t2",
                "t1": "t4"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t3",
                "t1": "t4"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t5",
                "t1": "t9"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t6",
                "t1": "t9"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t7",
                "t1": "t9"
            },
            "group": "True",
            "divisible": "False"
        },
        {
            "type": "EC",
            "task_instances": {
                "t0": "t8",
                "t1": "t9"
            },
            "group": "True",
            "divisible": "False"
        }
    ],
    "mission_decompositions": [
        [
            "t0",
            "t4",
            "t5",
            "t9"
        ],
        [
            "t0",
            "t4",
            "t6",
            "t9"
        ],
        [
            "t0",
            "t4",
            "t7",
            "t9"
        ],
        [
            "t0",
            "t4",
            "t8",
            "t9"
        ],
        [
            "t1",
            "t4",
            "t5",
            "t9"
        ],
        [
            "t1",
            "t4",
            "t6",
            "t9"
        ],
        [
            "t1",
            "t4",
            "t7",
            "t9"
        ],
        [
            "t1",
            "t4",
            "t8",
            "t9"
        ]
    ]
}
